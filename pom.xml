<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.0</version>
    </parent>

    <groupId>com.zys</groupId>
    <artifactId>SpringBootTemplate</artifactId>
    <version>1.0</version>
    <name>SpringBootTemplate</name>
    <description>Demo project for Spring Boot</description>

    <!-- 在springboot父依赖中有声明版本的依赖可以不指定版本，如替换版本只需要在<properties>中声明指定版本即可，
         如某不在springboot父依赖中声明，需要在此依赖下使用<version>${fastjson.version}</version>引用即可
     -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <elasticsearch.version>7.8.0</elasticsearch.version>
<!--        <mybatis.version>1.3.2</mybatis.version>-->
        <mybatisp.version>3.4.1</mybatisp.version>
        <fastjson.version>1.2.41</fastjson.version>
        <mysql.version>5.1.47</mysql.version>
        <druid.version>1.1.9</druid.version>
        <swagger.version>2.7.0</swagger.version>
        <syslog.version>0.9.60</syslog.version>
        <sftp.version>0.1.55</sftp.version>
    </properties>

    <dependencies>
        <!--依赖范围：<scope>test</scope>测试中可以使用不参与打包、
                    <scope>runtime</scope>只参与打包代码 无法/不使用例如jdbc、mysql驱动、
                    <scope>provided</scope>代码中测试中可以使用不参与打包、
                    <optional>true</optional>项目之间不用传递依赖，例如本项目被其他项目作为依赖引用，不用传递此依赖上级引用不会看到、用到此依赖
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!--        springboot应用监控模块-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
<!--        springboot的redis使用的是lettuce客户端，如果想使用jedis需要引入jedis依赖然后在配置文件切换客户端-->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <!--        热部署 ctrl+f9-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>org.mybatis.spring.boot</groupId>-->
<!--            <artifactId>mybatis-spring-boot-starter</artifactId>-->
<!--            <version>${mybatis.version}</version>-->
<!--        </dependency>-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>${mybatisp.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>${druid.version}</version>
        </dependency>
        <!--        ES相关依赖（httpclient低版本会和es产生版本冲突）-->
        <!--        整个ES有三种方式，1.springboot-data-se（业务简单可使用） 2.rest client（官方推荐） 3.transport（老版本使用此客户端，8.0后完全去除）-->
        <!--        <dependency>-->
        <!--        httpclient低版本会和es client产生版本冲突-->
        <!--            <groupId>org.apache.httpcomponents</groupId>-->
        <!--            <artifactId>httpclient</artifactId>-->
        <!--            <version>4.3</version>-->
        <!--        </dependency>-->
        <!--        <dependency>-->
        <!--            <groupId>org.springframework.boot</groupId>-->
        <!--            <artifactId>spring-boot-starter-data-elasticsearch</artifactId>-->
        <!--        </dependency>-->
        <!--        <dependency>-->
        <!--            <groupId>org.elasticsearch</groupId>-->
        <!--            <artifactId>elasticsearch</artifactId>-->
        <!--            <version>${elasticsearch.version}</version>-->
        <!--        </dependency>-->
        <!--        <dependency>-->
        <!--            <groupId>org.elasticsearch.client</groupId>-->
        <!--            <artifactId>elasticsearch-rest-client</artifactId>-->
        <!--            <version>${elasticsearch.version}</version>-->
        <!--        </dependency>-->
        <dependency>
            <groupId>org.elasticsearch.client</groupId>
            <artifactId>elasticsearch-rest-high-level-client</artifactId>
        </dependency>
        <!--        syslog相关依赖-->
        <dependency>
            <groupId>org.graylog2</groupId>
            <artifactId>syslog4j</artifactId>
            <version>${syslog.version}</version>
        </dependency>
        <!--        SFTP相关依赖-->
        <dependency>
            <groupId>com.jcraft</groupId>
            <artifactId>jsch</artifactId>
            <version>${sftp.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${swagger.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${swagger.version}</version>
        </dependency>
    </dependencies>

    <!--    springboot打包插件-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
